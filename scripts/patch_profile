#!/bin/sh

# Checks a file to see if it has been patched already
check_previous_patch() {
    if grep -q 'Setting PATH for JRuby' "$1"; then
        return 1
    fi
    return 0
}

# Tries to add the JRuby path to various shell files in "$HOME"
try_patch_profile() {
    # Detect shell files
    if [[ -f "$HOME/.tcshrc" ]]; then
        check_previous_patch "$HOME/.tcshrc"
        if [[ $? == 0 ]]; then
            patch_profile
        fi
    fi
    if [[ -f "$HOME/.cshrc" ]]; then
        check_previous_patch "$HOME/.cshrc"
        if [[ $? == 0 ]]; then
            patch_profile "$HOME/.cshrc"
        fi
    fi
    if [[ -f "$HOME/.bashrc" ]]; then
        check_previous_patch "$HOME/.bashrc"
        if [[ $? == 0 ]]; then
            patch_profile "$HOME/.bashrc"
        fi
    fi
    if [[ -f "$HOME/.bash_profile" ]]; then
        check_previous_patch "$HOME/.bash_profile"
        if [[ $? == 0 ]]; then
            patch_profile "$HOME/.bash_profile"
        fi
    fi
    if [[ -f "$HOME/.bash_login" ]]; then
        check_previous_patch "$HOME/.bash_login"
        if [[ $? == 0 ]]; then
            patch_profile "$HOME/.bash_login"
        fi
    fi
    if [[ -f "$HOME/.profile" ]]; then
        # No need to check for .profile if .bash_profile or .bash_login are present
        if [[ ! -f "$HOME/.bash_profile" ]] || [[ ! -f "$HOME/.bash_login" ]]; then
            check_previous_patch "$HOME/.profile"
            if [[ $? == 0 ]]; then
                patch_profile "$HOME/.profile"
            fi
        fi
    fi
    if [[ -f "$HOME/.zshrc" ]]; then
        check_previous_patch "$HOME/.zshrc"
        if [[ $? == 0 ]]; then
            patch_profile "$HOME/.zshrc"
        fi
    fi
    if [[ -f "$HOME/.zlogin" ]]; then
        check_previous_patch "$HOME/.zlogin"
        if [[ $? == 0 ]]; then
            patch_profile "$HOME/.zlogin"
        fi
    fi
}

# Add the JRuby path to a shell
patch_profile() {
    # Backup copy of shell file
    if [[ -f "$1" ]]; then
        cp -fp "$1" "$1.jrubysave"

        echo "" >> "$1"
        echo "# Setting PATH for JRuby $JRUBYVER" >> "$1"
        echo "# The orginal version is saved in `basename $1`.jrubysave" >> "$1"
        if [[ "$1" == "$HOME/.tcshrc" ]] || [[ "$1" == "$HOME/.cshrc" ]]; then
            echo 'setenv PATH ${PATH}:'"$JRUBY_CURRENT_PATH/bin" >> "$1"
        else
            echo 'PATH=$PATH:'"$JRUBY_CURRENT_PATH/bin" >> "$1"
            echo 'export PATH' >> "$1"
        fi
        if [ `id -ur` = 0 ]; then
            chown "$USER" "$1"
        fi
    fi
}

try_revert_patch() {
    # Detect shell files
    if [[ -f "$HOME/.tcshrc" ]]; then
        check_previous_patch "$HOME/.tcshrc"
        if [[ "$?" == 1 ]]; then
            if [[ -f "$HOME/.tcshrc.jrubysave" ]]; then
                cp -fp "$HOME/.tcshrc.jrubysave" "${PR}"
            else
                sed -iE '/JRuby/,/export/d' ${PR}
            fi
        fi
    fi
    if [[ -f "$HOME/.cshrc" ]]; then
        check_previous_patch "$HOME/.cshrc"
        if [[ "$?" == 1 ]]; then
            if [[ -f "$HOME/.cshrc.jrubysave" ]]; then
                cp -fp "$HOME/.cshrc.jrubysave" "${PR}"
            else
                sed -iE '/JRuby/,/export/d' ${PR}
            fi
        fi
    fi
    if [[ -f "$HOME/.bashrc" ]]; then
        check_previous_patch "$HOME/.bashrc"
        if [[ "$?" == 1 ]]; then
            if [[ -f "$HOME/.bashrc.jrubysave" ]]; then
                cp -fp "$HOME/.bashrc.jrubysave" "${PR}"
            else
                sed -iE '/JRuby/,/export/d' ${PR}
            fi
        fi
    fi
    if [[ -f "$HOME/.bash_profile" ]]; then
        check_previous_patch "$HOME/.bash_profile"
        if [[ "$?" == 1 ]]; then
            if [[ -f "$HOME/.bash_profile.jrubysave" ]]; then
                cp -fp "$HOME/.bash_profile.jrubysave" "${PR}"
            else
                sed -iE '/JRuby/,/export/d' ${PR}
            fi
        fi
    fi
    if [[ -f "$HOME/.bash_login" ]]; then
        check_previous_patch "$HOME/.bash_login"
        if [[ "$?" == 1 ]]; then
            if [[ -f "$HOME/.bash_login.jrubysave" ]]; then
                cp -fp "$HOME/.bash_login.jrubysave" "${PR}"
            else
                sed -iE '/JRuby/,/export/d' ${PR}
            fi
        fi
    fi
    if [[ -f "$HOME/.profile" ]]; then
        # No need to check for .profile if .bash_profile or .bash_login are present
        if [[ ! -f "$HOME/.bash_profile" ]] || [[ ! -f "$HOME/.bash_login" ]]; then
            check_previous_patch "$HOME/.profile"
            if [[ "$?" == 1 ]]; then
            if [[ -f "$HOME/.profile.jrubysave" ]]; then
                cp -fp "$HOME/.profile.jrubysave" "${PR}"
            else
                sed -iE '/JRuby/,/export/d' ${PR}
            fi
        fi
        fi
    fi
    if [[ -f "$HOME/.zshrc" ]]; then
        check_previous_patch "$HOME/.zshrc"
        if [[ "$?" == 1 ]]; then
            if [[ -f "$HOME/.zshrc.jrubysave" ]]; then
                cp -fp "$HOME/.zshrc.jrubysave" "${PR}"
            else
                sed -iE '/JRuby/,/export/d' ${PR}
            fi
        fi
    fi
    if [[ -f "$HOME/.zlogin" ]]; then
        check_previous_patch "$HOME/.zlogin"
        if [[ "$?" == 1 ]]; then
            if [[ -f "$HOME/.zlogin.jrubysave" ]]; then
                cp -fp "$HOME/.zlogin.jrubysave" "${PR}"
            else
                sed -iE '/JRuby/,/export/d' ${PR}
            fi
        fi
    fi
}
